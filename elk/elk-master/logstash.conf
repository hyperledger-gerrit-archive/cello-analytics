input {
    tcp {
        port => 5000
            type => syslog
    }
    udp {
        port => 5000
            type => syslog
    }
}

filter {
    if [type] == "syslog" {
        grok {
            break_on_match => true
			match => { "message" => [
# This can match the logspout syslog message on peer node
			"<%{NONNEGINT:syslog5424_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_hostname} %{NOTSPACE:cluster_id}_%{NOTSPACE:node_name} %{WORD:pid} - - \e%{NOTSPACE}[0-9]+m%{NOTSPACE:timestamp_log} +\[%{NOTSPACE:module}\] +%{WORD:action} -> %{WORD:log_level} +%{WORD:container_id_short}%{NOTSPACE}[0-9]+m +{0,1}%{GREEDYDATA:log_data}",
			"<%{NONNEGINT:syslog5424_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_hostname} %{NOTSPACE:cluster_id}_%{NOTSPACE:node_name} %{WORD:pid} - - %{NOTSPACE:timestamp_log} +\[%{NOTSPACE:module}\] +%{WORD:action} -> %{WORD:log_level} +%{WORD:container_id_short}%{NOTSPACE}[0-9]+m +{0,1}%{GREEDYDATA:log_data}",
# This can match the docker daemon syslog message on peer node
			"<%{NONNEGINT:syslog5424_pri}>%{SYSLOGTIMESTAMP:timestamp} %{NOTSPACE:image_name}:%{WORD:image_tag}/(?<cluster_name>[0-9a-f]+)_(?<node_name>vp[0-9]+)/%{WORD:container_id}\[%{WORD:pid}\]: %{NOTSPACE}[0-9]+m%{NOTSPACE:timestamp_log} +\[%{NOTSPACE:module}\] +%{WORD:action} -> %{WORD:log_level} +%{WORD:id4}%{NOTSPACE}[0-9]+m +{0,1}%{GREEDYDATA:log_data}",
# Try best to match
            "<%{NONNEGINT:syslog5424_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_hostname} %{NOTSPACE:cluster_id}_%{NOTSPACE:node_name} %{WORD:pid} - - %{GREEDYDATA:log_data}"
			]
			 }
            add_field => [ "log_type", "peer" ]
        }

# This can match the logspout syslog message on chaincode container
        grok {
            break_on_match => true
			match => { "message" => [
			"<%{NONNEGINT:syslog5424_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_id} %{NOTSPACE:cluster_id}-%{NOTSPACE:node_name}-%{NOTSPACE:chaincode_id} %{WORD:pid} - - %{NOTSPACE:timestamp_log} +\[%{NOTSPACE:module}\] +%{WORD:log_level} : \[%{NOTSPACE:container_id_short}\]%{GREEDYDATA:log_data}",
			"<%{NONNEGINT:syslog5424_pri}>1 %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:container_id} %{NOTSPACE:cluster_id}-%{NOTSPACE:node_name}-%{NOTSPACE:chaincode_id} %{WORD:pid} - - %{GREEDYDATA:log_data}"
			 ]
			 }
            add_field => [ "log_type", "chaincode" ]
        }
        date {
            match => ["timestamp", "MMM dd HH:mm:ss", "ISO8601"]
                target => "@timestamp"
        }
    }

}

output {
    if [log_type] {
		elasticsearch {
			hosts => ["http://elasticsearch:9200"]
			index => "logstash-%{+YYYY.MM.dd}"
		}
    } else {
		stdout { codec => rubydebug }
    }
}
